(defwidget usercard []
  (box :class "usercard"
       :orientation "v"
       :space-evenly false
    (box :class "user-content"
         :orientation "h"
         :space-evenly false
         :vexpand true
         :spacing 15
      (box :class "pfp"
           :style "background-image: url('${pfp}');")
      (box :class "info"
           :hexpand true
           :vexpand true
           :valign "center"
           :halign "start"
           :orientation "v"
           :space-evenly false
           :spacing 3
        (label :text "${username}" :class "username" :halign "start")
        (label :text "${uptime}" :class "uptime" :halign "start")
      )
    )
  )
)

(defwidget control [name icon tooltip onclick active]
  (box :class "control-container"
       :orientation "h"
       :hexpand true
       :valign "center"
       :space-evenly true
    (button :class "control-item ${name} ${active ? 'active' : ''}"
            :orientation "h"
            :space-evenly true
            :halign "center"
            :hexpand false
            :valign "center"
            :onclick "${onclick}"
            :tooltip "${tooltip}"
      (label :text "${icon}" :class "control-icon")
    )
  )
)

(defwidget sliders []
  (box :class "slidersbox"
       :orientation "v"
       :space-evenly false
       :spacing 25
    (box :orientation "h"
         :space-evenly "false"
         :class "vol-slider"
      (overlay
        (scale :value volume_value
               :onchange "~/.config/eww/scripts/volume.sh set {}"
               :min 0
               :max 101)
        (label :class "vol-label"
               :text "${volume_icon} "
               :valign "top"
               :halign "start")
      )
    )
    (box :orientation "h"
         :space-evenly "false"
         :class "br-slider"
      (overlay
        (scale :value br
               :onchange "~/.config/hypr/scripts/brightness.sh set {}"
               :min 0
               :max 101)
        (label :class "br-label"
               :text "${br_icon} "
               :valign "top"
               :halign "start")
      )
    )
    (box :orientation "h"
         :space-evenly "false"
         :class "mic-slider"
      (overlay
        (scale :value mic
               :onchange "~/.config/eww/scripts/mic set {}"
               :min 0
               :max 101)
        (label :class "mic-label"
               :text "${mic_status == 'yes' ? '' : ''} "
               :valign "top"
               :halign "start")
      )
    )
  )
)

(defwidget music []
  (box :class "musicbox"
       :orientation "v"
       :space-evenly false
    (box :class "firstrow"
         :orientation "h"
         :space-evenly false
         :vexpand true
      (box :class "picbox"
           :orientation "v"
           :space-evenly true
           :style "background-image: url('${music_url}');"
        music_pic
      )
      (box :class "info"
           :space-evenly false
           :hexpand true
           :valign "center"
           :orientation "v"
           :spacing 5
        (label :text "${music_title}" :class "music-title")
        (label :text "${music_artist}" :class "music-artist")
      )
    )
    (box :class "lastrow"
         :orientation "h"
         :space-evenly true
      (box :class "controls-container"
           :orientation "h"
           :space-evenly true
        (button :onclick "~/.config/hypr/scripts/scripts/music/control.sh prev"
                :class "previousbutton"
                :halign "center"
          "玲"
        )
        (button :onclick "~/.config/hypr/scripts/scripts/music/control.sh play-pause"
                :class "pausebutton ${music_status == 'Playing' ? 'playing' : ''}"
                :halign "center"
          "${music_status == 'Playing' ? '' : ''}"
        )
        (button :onclick "~/.config/hypr/scripts/scripts/music/control.sh next"
                :class "nextbutton"
                :halign "center"
          "怜"
        )
      )
    )
  )
)

(defwidget chart [label value icon icon-class value2]
  (box :class "chart-container"
       :orientation "v"
       :space-evenly false
    (box :class "header"
         :space-evenly true
         :orientation "v"
      (label :text "${label}" :class "label" :halign "start")
      (label :text "${value2}" :class "label2" :halign "start")
    )
    (box :class "body"
         :space-evenly true
         :orientation "h"
      (box :class "container"
           :space-evenly true
           :halign "center"
           :hexpand true
           :orientation "h"
        (box :class "chart-container" :space-evenly false
          (overlay
            (circular-progress :value value
                               :thickness 50
                               :class "chart"
                               :start-at 75
              (label :text "L")
            )
            (label :text "${icon}" :class "chart-icon ${icon-class}")
          )
        )
      )
    )
  )
)

(defwidget charts []
  (box :class "chartsbox"
       :orientation "v"
       :space-evenly false
       :spacing 25
    (box :class "firstrow"
         :orientation "h"
         :space-evenly true
         :spacing 25
      (chart :label "CPU" :icon "" :icon-class "cpu" :value cpu :value2 cpuPercent)
      (chart :label "RAM" :icon "" :icon-class "ram" :value ram :value2 ramValue)
      (chart :label "Temp" :icon "" :icon-class "temp" :value temp :value2 tempDegree)
      (chart :label "Disk" :icon "" :icon-class "disk" :value disk :value2 diskUsage)
    )
  )
)

(defwidget footer []
  (box :class "footer"
       :space-evenly true
       :orientation "h"
       :valign "end"
    (box :class "protipbox"
         :orientation "h"
         :space-evenly false
         :halign "center"
         :spacing 15
      (label :text "ﯦ " :class "icon")
      (label :text "Press the menu icon again to close this popup." :class "placeholder")
    )
  )
)

(defwidget content []
  (box :class "content-container"
       :orientation "h"
       :space-evenly false
    (box :class "contentbox"
         :orientation "v"
         :space-evenly true
         :spacing 25
         :vexpand true
      (box :class "firstcol"
           :orientation "h"
           :space-evenly true
           :spacing 25
        (usercard)
      
          (music)
      )
      (box :class "lastcol"
           :orientation "v"
           :space-evenly false
           :spacing 25

          (charts)
        
      )
    )
  
  )
)

(defwidget dashboard []
  (revealer :transition "slideup" :reveal {dashboardIsOpen} :duration {ANIM_DURATION}
    (box :class "dashboardbox"
         :orientation "v"
         :space-evenly false
      (content)
    )
  )
)

(defwindow dashboard
  :monitor 0 :geometry (geometry :x "0px"
                      :y "0px"
                      :width "10px" ; automatically adjusted by hypr/scripts
                      :height "10px" ; automatically adjusted by hypr/scripts
                      :anchor "bottom center")
  :type "dock"
  :wm-ignore false
(dashboard))
